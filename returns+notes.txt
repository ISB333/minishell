    1: General error.
    2: Misuse of shell builtins.
    126: Command found but is not executable.
    127: Command not found.
    128+n: Fatal error signal "n".
    130: Script terminated by Ctrl+C.
    255: Exit status out of range.


	128 + 1 = 129: SIGHUP - Hangup detected on controlling terminal or death of controlling process.
    128 + 2 = 130: SIGINT - Interrupt from keyboard (e.g., Ctrl+C).
    128 + 3 = 131: SIGQUIT - Quit from keyboard.
    128 + 4 = 132: SIGILL - Illegal instruction.
    128 + 5 = 133: SIGTRAP - Trace/breakpoint trap.
    128 + 6 = 134: SIGABRT - Abort signal from abort(3).
    128 + 7 = 135: SIGBUS - Bus error.
    128 + 8 = 136: SIGFPE - Floating-point exception.
    128 + 9 = 137: SIGKILL - Kill signal (cannot be caught or ignored).
    128 + 10 = 138: SIGUSR1 - User-defined signal 1.
    128 + 11 = 139: SIGSEGV - Invalid memory reference.
    128 + 12 = 140: SIGUSR2 - User-defined signal 2.
    128 + 13 = 141: SIGPIPE - Broken pipe.
    128 + 14 = 142: SIGALRM - Timer signal from alarm(2).
    128 + 15 = 143: SIGTERM - Termination signal.
    128 + 16 = 144: SIGSTKFLT - Stack fault on coprocessor.
    128 + 17 = 145: SIGCHLD - Child process terminated, stopped, or continued.
    128 + 18 = 146: SIGCONT - Continue executing, if stopped.
    128 + 19 = 147: SIGSTOP - Stop executing (cannot be caught or ignored).
    128 + 20 = 148: SIGTSTP - Stop signal from keyboard (Ctrl+Z).
    128 + 21 = 149: SIGTTIN - Background process attempting to read from TTY.
    128 + 22 = 150: SIGTTOU - Background process attempting to write to TTY.
    128 + 23 = 151: SIGURG - Urgent condition on socket.
    128 + 24 = 152: SIGXCPU - CPU time limit exceeded.
    128 + 25 = 153: SIGXFSZ - File size limit exceeded.
    128 + 26 = 154: SIGVTALRM - Virtual timer expired.
    128 + 27 = 155: SIGPROF - Profiling timer expired.
    128 + 28 = 156: SIGWINCH - Window size change.
    128 + 29 = 157: SIGIO - I/O now possible.
    128 + 30 = 158: SIGPWR - Power failure restart.
    128 + 31 = 159: SIGSYS - Bad system call.

    ------------------------------------------------------------------------------------------------------------------------

    - Si il y a plusieurs infile/outfile, uniquement le dernier est pris en compte 
    (valable pour heredoc et append)

    - Si heredoc wrong_cmd | wrong_cmd | cmd 
        -> les messages d'erreurs sont afficher après l'execution des commandes
        -> return_code = 0 (même si la dernière commande est "echo $?")

    - Si il y a une erreur d'infile/outfile, le processus s'arrête