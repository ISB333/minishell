-- IGNORE:
	''
	""
	not interpret ' or "" or or \ or ;
	{} or ()

-- ADD_SPACE:
	|
	< >
	<< >>

 __________________________________________________________________________________________________________________________________
| Character | Name              | Description                                                                                      |
|-----------|-------------------|--------------------------------------------------------------------------------------------------|
|  |        | Pipe              | Passes the output of one command as input to another command.                                    |
|  >        | Redirect Output   | Redirects the output of a command to a file, overwriting the file if it exists.                  |
|  >>       | Append Output     | Redirects the output of a command to a file, appending to the file if it exists.                 |
|  <        | Redirect Input    | Takes input for a command from a file.                                                           |
|  <<       | Here Document     | Redirects multiple lines of input (until a specified delimiter is reached) to a command.         |
|  <<<      | Here String       | Redirects a string as input to a command.                                                        |
|  &        | Background        | Runs a command in the background.                                                                |
|   ;       | Command Separator | Allows multiple commands to be executed sequentially.                                            |
|  ()       | Subshell          | Runs commands in a subshell.                                                                     |
|  {}       | Command Group     | Groups commands together, treated as a single command.                                           |
|  \        | Escape            | Escapes special characters, making them literal.                                                 |
|  ""       | Double Quotes     | Preserves the literal value of all characters within, except `$`, `` ` ``, and `\`.              |
|  ''       | Single Quotes     | Preserves the literal value of all characters within.                                            |
|   `       | Backticks         | Command substitution, runs the enclosed command and substitutes its output.                      |
|  $()      | Command Subst.    | Command substitution, runs the enclosed command and substitutes its output (modern syntax).      |
|  $        | Variable          | Expands to the value of a variable.                                                              |
|  ${}      | Parameter Exp.    | Expands to the value of a variable with more complex processing.                                 |
|  ~        | Tilde             | Expands to the home directory of the current user.                                               |
|  ?        | Wildcard          | Matches a single character in filename expansion.                                                |
|  []       | Wildcard          | Matches any one of the enclosed characters or a range of characters.                             |
|  [^]      | Wildcard          | Matches any one character except those enclosed.                                                 |
|   -       | Range             | Specifies a range of characters within square brackets.                                          |
|   #       | Comment           | Begins a comment, ignored by the shell.                                                          |
|   !       | History/Negation  | Executes commands from the history or negates a condition in certain contexts.                   |
|   :       | No-op             | A null command that returns true, can be used as a placeholder.                                  |
|   ,       | Separator         | Separates expressions in brace expansion.                                                        |
|   .       | Source            | Runs commands from a file in the current shell (`source` is an alternative built-in).            |
|   \n      | Line continuation | Indicates that the command continues on the next line.                                           |
|   ()      | Array Subscript   | Used in array definitions and to access array elements.                                          |
|   $[      | Arithmetic Exp.   | Evaluates an arithmetic expression (older syntax, prefer `$(())`).                               |
|  $(( ))   | Arithmetic Exp.   | Evaluates an arithmetic expression (modern syntax).                                              |
|   &>      | Redirect All      | Redirects both standard output and standard error to a file.                                     |
|   &>>     | Append All        | Redirects both standard output and standard error to a file, appending to the file if it exists. |
|   2>      | Redirect Stderr   | Redirects standard error to a file.                                                              |
|   2>>     | Append Stderr     | Redirects standard error to a file, appending to the file if it exists.                          |
|   <&      | Duplicates Input  | Duplicates input file descriptors.                                                               |
|   >&      | Duplicates Output | Duplicates output file descriptors.                                                              |
|  <`n`>    | Redirect n        | Redirects file descriptor `n` to a file.                                                         |
|   <>      | Read/Write        | Opens a file for both reading and writing.                                                       |
|   -       | Heredoc Ignore    | Strips leading tabs from heredoc input.                                                          |
|   --      | End Options       | Indicates the end of command options, allowing subsequent arguments to be treated as filenames.  |
------------------------------------------------------------------------------------------------------------------------------------
